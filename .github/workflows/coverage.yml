name: Coverage

on: 
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
  test-and-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            dist/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libglib2.0-dev

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: llvm-tools-preview

      - name: Install tools
        run: |
          cargo install tauri-cli --locked
          cargo install trunk --locked
          cargo install grcov --force
          cargo install wasm-bindgen-cli --locked

      - name: Setup test environment
        run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo XVFB -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &

      - name: Build WASM
        run: |
          RUSTFLAGS="-Cinstrument-coverage" trunk build
        env: 
          CARGO_TARGET_DIR: target/coverage.wasm

      - name: Run frontend tests
        run: |
          cargo tauri dev &
          TAURI_PID=$!
          
          # More aggressive polling for dev server
          COUNTER=0
          while ! curl -s http://localhost:1420 > /dev/null && [ $COUNTER -lt 60 ]; do
            sleep 15
            let COUNTER=COUNTER+1
            echo "Waiting for dev server... ($COUNTER/60)"
          done
          
          if [ $COUNTER -eq 60 ]; then
            echo "Dev server failed to start"
            kill $TAURI_PID
            exit 1
          fi
          
          RUSTFLAGS="-Cinstrument-coverage" \
          LLVM_PROFILE_FILE="frontend-%p-%m.profraw" \
          cargo test --target-dir target/coverage-tests
          
          kill $TAURI_PID

      - name: Run backend tests
        run: |
          cd src-tauri
          RUSTFLAGS="-Cinstrument-coverage" \
          LLVM_PROFILE_FILE="backend-%p-%m.profraw" \
          cargo test --target-dir ../target/coverage-backend

      - name: Generate coverage report
        run: |
          grcov . \
            --binary-path ./target/coverage-tests/debug/ \
            --binary-path ./target/coverage-backend/debug/ \
            --binary-path ./target/coverage-wasm/ \
            -s . \
            -t lcov \
            --branch \
            --ignore-not-existing \
            --ignore "/*" \
            --ignore "src-tauri/target/*" \
            --ignore "target/*" \
            --ignore "dist/*" \
            -o coverage.lcov \
            ./**/*.profraw

      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.lcov
          fail_ci_if_error: true