name: Coverage

on: 
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/cache@v3
              with:
                path: |
                  ~/.cargo/bin/
                  ~/.cargo/registry/index/
                  ~/.cargo/registry/cache/
                  ~/.cargo/git/db/
                  target/
                key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                restore-keys: |
                  ${{ runner.os }}-cargo-

            - name: Install system dependencies
              run: |
                sudo apt-get update
                sudo apt-get install -y \
                  libgtk-3-dev \
                  libwebkit2gtk-4.1-dev \
                  libappindicator3-dev \
                  librsvg2-dev \
                  patchelf \
                  libsoup-3.0-dev \
                  libjavascriptcoregtk-4.1-dev \
                  build-essential \
                  curl \
                  wget \
                  file \
                  libssl-dev \

            - name: Install Chrome and ChromeDriver
              run: |
                wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
                sudo apt install -y ./google-chrome-stable_current_amd64.deb
                CHROME_VERSION=$(google-chrome --version | cut -d' ' -f3 | cut -d'.' -f1)
                wget -q https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}
                CHROMEDRIVER_VERSION=$(cat LATEST_RELEASE_${CHROME_VERSION})
                wget -q https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip
                unzip chromedriver_linux64.zip
                sudo mv chromedriver /usr/local/bin/
                chromedriver --version

            - name: Install Rust
              uses: actions-rs/toolchain@v1 
              with:
                toolchain: stable
                override: true
                components: llvm-tools-preview

            - name: Install grcov
              run: cargo install grcov

            - name: Start ChromeDriver
              run: |
                chromedriver --port=9515 &
                sleep 5

            - name: Start dev server and run frontend tests
              run: |
                cargo tauri dev &
                Tauri_PID=$!

                sleep 20

                RUSTFLAGS="-Cinstrument-coverage" LLVM_PROFILE_FILE="frontend-%p-%m.profraw" cargo test --manifest-path ./Cargo.toml
                TEST_EXIT_CODE=$?

                kill $TAURI_PID
                exit $TEST_EXIT_CODE
          
            - name: Run backend tests
              run: |
                RUSTFLAGS="-Cinstrument-coverage" LLVM_PROFILE_FILE="backend-%p-%m.profraw" cargo test --manifest-path ./src-tauri/Cargo.toml

            - name: Generate combined coverage report
              run: |
                grcov . \
                --binary-path ./target/debug/ \
                -s . \
                -t lcov \
                --branch \
                --ignore-not-existing \
                --ignore "/*" \
                --ignore "src-tauri/target/*" \
                --ignore "target/*" \
                -o coverage.lcov \
                ./**/*.profraw

            - name: Upload coverage reporst to Codecov
              uses: codecov/codecov-action@v5
              with:
                token: ${{ secrets.CODECOV_TOKEN }}
                files: ./coverage.lcov
                fail_ci_if_error: true
