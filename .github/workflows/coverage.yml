name: Coverage

on: 
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/cache@v3
              with:
                path: |
                  ~/.cargo/bin/
                  ~/.cargo/registry/index/
                  ~/.cargo/registry/cache/
                  ~/.cargo/git/db/
                  target/
                key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                restore-keys: |
                  ${{ runner.os }}-cargo-

            - name: Install system dependencies
              run: |
                sudo apt-get update
                sudo apt-get install -y \
                  libgtk-3-dev \
                  libwebkit2gtk-4.1-dev \
                  libappindicator3-dev \
                  librsvg2-dev \
                  patchelf \
                  libsoup-3.0-dev \
                  libjavascriptcoregtk-4.1-dev \
                  build-essential \
                  curl \
                  wget \
                  file \
                  libssl-dev \
                  libglib2.0-dev

            - name: Setup Chrome and ChromeDriver
              uses: browser-actions/setup-chrome@v1
              with:
                chrome-version: stable

            - name: Setup ChromeDriver
              uses: nanasess/setup-chromedriver@v2

            - name: Install Rust
              uses: actions-rs/toolchain@v1 
              with:
                toolchain: stable
                override: true
                components: llvm-tools-preview

            - name: Install grcov
              run: cargo install grcov

            - name: Start ChromeDriver and X virtual framebuffer
              run: |
                export DISPLAY=:99
                chromedriver --url-base=/wd/hub &
                sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
                sleep 5

            - name: Start dev server and run frontend tests
              run: |
                cargo tauri dev &
                Tauri_PID=$!

                sleep 20

                RUSTFLAGS="-Cinstrument-coverage" LLVM_PROFILE_FILE="frontend-%p-%m.profraw" cargo test --manifest-path ./Cargo.toml
                TEST_EXIT_CODE=$?

                kill $TAURI_PID
                exit $TEST_EXIT_CODE
          
            - name: Run backend tests
              run: |
                RUSTFLAGS="-Cinstrument-coverage" LLVM_PROFILE_FILE="backend-%p-%m.profraw" cargo test --manifest-path ./src-tauri/Cargo.toml

            - name: Generate combined coverage report
              run: |
                grcov . \
                --binary-path ./target/debug/ \
                -s . \
                -t lcov \
                --branch \
                --ignore-not-existing \
                --ignore "/*" \
                --ignore "src-tauri/target/*" \
                --ignore "target/*" \
                -o coverage.lcov \
                ./**/*.profraw

            - name: Upload coverage reporst to Codecov
              uses: codecov/codecov-action@v5
              with:
                token: ${{ secrets.CODECOV_TOKEN }}
                files: ./coverage.lcov
                fail_ci_if_error: true
